@page "/change-password"
@using DotNetBlazor.Client.Components
@using DotNetBlazor.Client.Services
@using DotNetBlazor.Shared.Models.Profile
@using System.Net
@inject IProfieService ProfileService
@inject IAlertService AlertService

<PageTitle>Change Password</PageTitle>

    <div class="container">
        <div class="main-body">
            <div class="row">
                <div class="col-lg-8">
                    <div class="card">
                        <div class="card-body">
                            <EditForm Model="@model" OnValidSubmit="OnValidSubmit">        
                                <ValidationError />
                                <DataAnnotationsValidator />
                                <div class="row mb-3">
                                    <div class="col-sm-4">
                                        <h6 class="mb-0">Old Password</h6>
                                    </div>
                                    <div class="col-sm-8 text-secondary">
                                        <InputText type="password" class="form-control" @bind-Value="model.Password" />
                                        <ValidationMessage For="@(() => model.Password)" />
                                    </div>
                                </div>
                                
                                <div class="row mb-3">
                                    <div class="col-sm-4">
                                        <h6 class="mb-0">New Password</h6>
                                    </div>
                                    <div class="col-sm-8 text-secondary">
                                        <InputText type="password" class="form-control" @bind-Value="model.NewPassword" />
                                        <ValidationMessage For="@(() => model.NewPassword)" />
                                    </div>
                                </div>
                                
                                <div class="row mb-3">
                                    <div class="col-sm-4">
                                        <h6 class="mb-0">Confirm Password</h6>
                                    </div>
                                    <div class="col-sm-8 text-secondary">
                                        <InputText type="password" class="form-control" @bind-Value="model.ConfirmPassword" />
                                        <ValidationMessage For="@(() => model.ConfirmPassword)" />
                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-4"></div>
                                    <div class="col-sm-8 text-secondary">
                                         <button disabled="@loading" class="btn btn-primary">
                                            @if (loading)
                                            {
                                                <span class="spinner-border spinner-border-sm mr-1"></span>
                                            }
                                            Change Password
                                        </button>
                                    </div>
                                </div>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

@code {
    private ChangePasswordRequest model = new();
    private bool loading;
    private async Task OnValidSubmit()
    {
        AlertService.Clear();

        loading = true;
        try
        {
            var response = await ProfileService.ChangePassword(model);

            if (response?.Response?.Status == (int)HttpStatusCode.OK)
            {
                AlertService.Success("Password changed successfully!");
                model = new ChangePasswordRequest();
            }
            else
            {
                AlertService.Error(response?.Response?.Message);
            }
        }
        catch (Exception ex)
        {
            AlertService.Error(ex.Message);
        }
        finally
        {
            loading = false;
        }
    }
}
